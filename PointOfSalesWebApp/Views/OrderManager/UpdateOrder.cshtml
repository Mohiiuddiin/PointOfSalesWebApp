@model PointOfSalesWebApp.Models.Order

@{
    /**/

    ViewBag.Title = "UpdateOrder";
}

<h2 align="center">Manage Order</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h class="btn btn-success" style="padding-left:35px;padding-right:35px;font-weight:bolder;font-size:large">Order Information</h>
    <br />
    <br />
    <div class="form-horizontal">

        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        @Html.HiddenFor(model => model.Id)
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.OrderStatus, new SelectList(ViewBag.StatusList), new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PaymentMethod, new SelectList(ViewBag.PaymentMethodList), "Select Payment Method", new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TransNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TransNo, new { htmlAttributes = new { @class = "form-control",@placeholder="For Bkash/Nagad Transaction" } })
                    @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TransAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TransAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @* @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @* @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-dark" />
            </div>
        </div>
    </div>
}


    <table class="table table-responsive table-dark" style="">
        <tr>
            <th>
                Image
            </th>
            <th>
                ProductName
            </th>

            <th>
                Price
            </th>
            <th>
                Quantity
            </th>

            <th>
                LineTotal
            </th>
            <th></th>
        </tr>
        @{ 
            decimal sum = 0;
        }
        @foreach (var item in ViewBag.OrderItems)
        {
            //    public string OrderId { get; set; }
            //public string ProductId { get; set; }
            //public string ProductName { get; set; }
            //public string Image { get; set; }
            //public decimal Price { get; set; }
            //public int Quantity { get; set; }
            <tr>
                <td>
                    <img class="img-thumbnail" style="height:100px;width:100px" src="~/Content/ProductImages/@item.Image" />
                </td>
                <td>
                    @item.ProductName
                </td>
                <td>
                    @item.Price
                </td>
                <td>
                    @item.Quantity
                </td>
                <td>
                    @string.Format("{0:c}", item.Price * item.Quantity)
                </td>
                <td></td>
                @{
                    sum = sum + item.Price * item.Quantity;
                } 
  

              </tr>
                    }
        <tr>
            <td colspan="5" style="text-align:right">
                Total
            </td>
            <td>
                @string.Format("{0:c}", sum)
            </td>
            
        </tr>

    </table>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
